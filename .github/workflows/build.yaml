name: Build and Promote Image to Dev

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - '.github/**'
  workflow_dispatch:

jobs:
  build-push-and-promote:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout application code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.14
        with:
          versionSpec: 5.x

      - name: Determine version with GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.14
        with:
          additionalArguments: /overrideconfig mode=Mainline

      - name: Capture last commit message from app repo
        id: commitmsg
        run: |
          echo "COMMIT_MESSAGE<<EOF" >> $GITHUB_OUTPUT
          git log -1 --pretty=%B >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push multi-arch Docker image
        working-directory: src
        run: |
          docker buildx build --push \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --build-arg TARGETARCH_ARG=true \
            -f ./RandomQuotes.Web/Dockerfile \
            -t ${{ secrets.DOCKERHUB_REPO }}:${{ steps.gitversion.outputs.semVer }} \
            -t ${{ secrets.DOCKERHUB_REPO }}:latest .

      - name: Report Image to Codefresh
        uses: codefresh-io/codefresh-report-image@latest
        with:
          CF_RUNTIME_NAME: 'codefresh-local'
          CF_API_KEY: '${{ secrets.CF_USER_TOKEN }}'
          CF_CONTAINER_REGISTRY_INTEGRATION: 'harrisonmeister-dockerhub'
          CF_IMAGE: '${{ secrets.DOCKERHUB_REPO }}:${{ steps.gitversion.outputs.semVer }}'
          CF_GIT_BRANCH: '${{ github.ref_name }}'
          CF_GITHUB_TOKEN: '${{ secrets.CF_GITHUB_TOKEN }}'
          CF_ISSUE_TRACKING_INTEGRATION: 'harrisonmeister-jira'
          CF_JIRA_PROJECT_PREFIX: 'RK'
          CF_JIRA_MESSAGE: 'RK-1'

      - name: Clone GitOps repo
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.GIT_USER_TOKEN }}
          path: k8s
          ref: main
          fetch-depth: 0

      - name: Bump image tag in dev overlay
        run: |
          cd k8s/k8s/overlays/dev
          yq e -i '.images[0].newTag = "${{ steps.gitversion.outputs.semVer }}"' kustomization.yaml

      - name: Commit and push changes to GitOps repo
        run: |
          cd k8s
          git config user.name "${{ secrets.GIT_USER_NAME }}"
          git config user.email "${{ secrets.GIT_USER_EMAIL }}"
          git add k8s/overlays/dev/kustomization.yaml
          git commit -m "${{ steps.commitmsg.outputs.COMMIT_MESSAGE }}"
          git push origin main
